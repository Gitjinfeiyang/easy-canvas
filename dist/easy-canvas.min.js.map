{"version":3,"file":"easy-canvas.min.js","sources":["../lib/constants.js","../lib/utils.js","../lib/line.js","../lib/flex-box.js","../lib/tree-node.js","../lib/complete-styles.js","../lib/element.js","../lib/view.js","../lib/text.js","../lib/image.js","../lib/event-manager.js","../lib/canvas-render.js","../lib/weapp-adapter.js","../lib/layer.js","../lib/scroll-view.js","../lib/create-element.js","../lib/index.js"],"sourcesContent":["const DISPLAY = {\n  BLOCK: 'block',\n  INLINE_BLOCK: 'inline-block',\n  INLINE: 'inline', // 用户不能设置inline，text默认为inline\n  FLEX: 'flex',\n  NONE: 'none'\n}\n\nconst WIDTH = {\n  AUTO: 'auto',\n  OUTER: '100%'\n}\n\nconst POSITION = {\n  ABSOLUTE: 'absolute',\n  FIXED: 'fixed',\n  RELATIVE: 'relative',\n  STATIC: 'static'\n}\n\nconst TEXT_ALIGN = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center'\n}\n\nconst FLEX_DIRECTION = {\n  ROW: 'row',\n  COLUMN: 'column'\n}\n\nconst DEFAULT_STYLES = {\n  display: DISPLAY.BLOCK,\n  fontSize: 14,\n  fontWeight: 400,\n  fontFamily: \"Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei\",\n  color: '#000',\n  paddingTop: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  paddingRight: 0,\n  marginTop: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  marginRight: 0,\n  height: WIDTH.AUTO,\n  borderRadius: 0,\n  lineCap: 'square',\n  flexDirection: FLEX_DIRECTION.ROW,\n  verticalAlign: 'middle',\n  textAlign: 'left',\n  justifyContent: 'flex-start',\n  alignItems: 'flex-start',\n  whiteSpace: 'normal',\n  zIndex: 1,\n  visible: true,\n  position: 'static'\n}\n\nexport default {\n  DISPLAY,\n  WIDTH,\n  POSITION,\n  DEFAULT_STYLES,\n  TEXT_ALIGN,\n  FLEX_DIRECTION\n}\n","export function isExact(num) {\n  return typeof num === 'number'\n}\n\nexport function isAuto(num) {\n  return num === 'auto'\n}\n\nexport function isOuter(num) {\n  if (typeof num !== 'string') return\n  return num.match('%')\n}\n\nexport function parseOuter(num) {\n  let _n = parseInt(num.replace('%', ''))\n  return (isNaN(_n) || _n < 0) ? 0 : (_n / 100)\n}\n\n\nexport function walk(element, callback) {\n  let _continue = false // 是否跳过当前节点以及后面的节点\n  let _next = false // 是否跳过当前节点数，子元素都不会遍历\n  const _callContinue = () => _continue = true\n  const _callNext = () => _next = true\n  if (element != null) {\n    var stack = [];\n    stack.push(element);\n    while (stack.length != 0) {\n      var item = stack.pop();\n      callback(item, _callContinue, _callNext)\n      if (!_next) {\n        var children = item._getChildren();\n        for (var i = children.length - 1; i >= 0; i--) {\n          if (!_continue) {\n            stack.push(children[i]);\n          } else {\n            // 复位\n            _continue = false\n          }\n\n        }\n\n      } else {\n        // 复位\n        _next = false\n      }\n    }\n  }\n}\n\nexport function walkParent(element, callback) {\n  if (!element) return\n  let cur = element\n  let stop = false\n  const callbreak = () => {\n    stop = true\n  }\n  while (cur.parent) {\n    callback(cur.parent, callbreak)\n    if (stop) {\n      break\n    }\n    cur = cur.parent\n  }\n}\n\nexport function findRelativeTo(element) {\n  if (element.isInFlow()) return element.parent\n  if (element.renderStyles.position === 'fixed') return element.root\n  let relativeTo = null\n  walkParent(element, (parent) => {\n    if (parent.renderStyles.position !== 'static' && !relativeTo) {\n      relativeTo = parent\n    }\n  })\n  if (!relativeTo) {\n    relativeTo = element.root\n  }\n  return relativeTo\n}\n\n\n//\nvar pow = Math.pow,\n  sqrt = Math.sqrt,\n  sin = Math.sin,\n  cos = Math.cos,\n  PI = Math.PI,\n  c1 = 1.70158,\n  c2 = c1 * 1.525,\n  c3 = c1 + 1,\n  c4 = (2 * PI) / 3,\n  c5 = (2 * PI) / 4.5;\n\nexport function easeInOutElastic(x) {\n  return x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ?\n    -(pow(2, 20 * x - 10) * sin((20 * x - 11.125) * c5)) / 2 :\n    pow(2, -20 * x + 10) * sin((20 * x - 11.125) * c5) / 2 + 1;\n}\n\nfunction easeInOutExpo(pos) {\n  if (pos === 0) return 0;\n  if (pos === 1) return 1;\n  if ((pos /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (pos - 1));\n  return 0.5 * (-Math.pow(2, -10 * --pos) + 2);\n}\n\n\nexport function isWX() {\n  try {\n    return Boolean(wx.getSystemInfoSync);\n  } catch(err) {\n    return false\n  }\n}\n\nexport function isEndNode(el) {\n  return el.parent && !el.next && !el.hasChildren()\n}\n\nexport function breadthFirstSearch(node) {\n\n  var nodes = [];\n\n  if (node != null) {\n\n    var queue = [];\n\n    queue.unshift(node);\n\n    while (queue.length != 0) {\n\n      var item = queue.shift();\n\n      nodes.push(item._generateRender());\n\n      var children = item._getChildren();\n\n      for (var i = 0; i < children.length; i++)\n        queue.push(children[i]._generateRender());\n\n    }\n\n  }\n\n  return nodes;\n\n}\n\nexport function breadthFirstSearchRight(node) {\n\n  var nodes = [];\n\n  if (node != null) {\n\n    var queue = [];\n\n    queue.unshift(node);\n\n    while (queue.length != 0) {\n\n      var item = queue.shift();\n\n      nodes.push(item._generateRender());\n\n      var children = item._getChildren();\n\n      for (var i = children.length - 1; i >= 0; i--)\n        queue.push(children[i]._generateRender());\n\n    }\n\n  }\n\n  return nodes.reverse();\n\n}\n\nexport function needReflow(style) {\n  return ['width',\n    'height',\n    'position',\n    'display',\n    'padding',\n    'paddingTop',\n    'paddingLeft',\n    'paddingBottom',\n    'paddingRight',\n    'margin',\n    'marginLeft',\n    'marginTop',\n    'marginBottom',\n    'marginRight',\n    'borderWidth',\n    'flexDirection',\n    'justifyContent',\n    'alignItems',\n    'textAlign',\n    'left',\n    'top',\n    'right',\n    'bottom'\n  ].includes(style)\n}\n\nconst mergeKeys = ['attrs', 'styles', 'on']\nexport function mergeOptions(options, mergeOptions) {\n  let mergedOptions = {}\n  mergeKeys.forEach(key => {\n    if (!options[key]) options[key] = {}\n    if (!mergeOptions[key]) mergeOptions[key] = {}\n    mergedOptions[key] = Object.assign({}, options[key], mergedOptions[key])\n  })\n  return mergedOptions\n}\n\n\nexport function floor(val){\n  return (0.5 + val) << 0\n}\n\nexport function qSort3(arr,callback) {       //三路快排\n  if(arr.length == 0) {\n    return [];\n  }\n  var left = [];\n  var center = [];\n  var right = [];\n  var pivot = arr[0];    //偷懒，直接取第一个,实际取值情况 参考[快速排序算法的优化思路总结]\n  let val = 0\n  for(var i = 0; i < arr.length; i++) {\n    val = callback(arr[i],pivot)\n    if(val<0) {\n      left.push(arr[i]);\n    } else if(val === 0) {\n      center.push(arr[i]);\n    } else {\n      right.push(arr[i]);\n    }\n  }\n  return [...qSort3(left,callback), ...center, ...qSort3(right,callback)];\n}\n\nexport function getThrottle(threshold) {\n    let timer;\n    return function (fn) {\n        if (!timer) {\n            timer = setTimeout(function () {\n                fn();\n                timer = null;\n            }, threshold)\n        }\n    }\n}\n","import { isExact, isAuto } from './utils'\n\nexport default class Line {\n  constructor() {\n    this.width = 0\n    this.height = 0\n    this.contentWidth = 0 // 右边界\n    this.y = 0 // 上\n    this.doorClosed = false // 是否允许加入\n    this.outerWidth = 0\n    this.container = null\n    this.elements = []\n    this.start = null // 起点，行最左边第一个\n    this.end = null // 结束\n    this.offsetX = 0\n    this.id = Math.random()\n  }\n\n  bind(el) {\n    this.container = el.parent\n    this.initHeight(el)\n    this.outerWidth = el.parent && isAuto(el.parent.styles.width) ? Infinity : el.parent.renderStyles.contentWidth\n\n    this.start = el\n    this.add(el)\n  }\n\n  initHeight(el) {\n    this.height = el.parent && el.parent.renderStyles.lineHeight || 0\n  }\n\n  initLayout(el) {\n    this.right = el._getContainerLayout().contentX\n    this.x = el._getContainerLayout().contentX\n    this.y = this.getPreLine(el).y\n  }\n\n  refreshElementPosition(el) {\n    if (this.start === el) {\n      this.initLayout(el)\n    }\n    // 刷新位置，首先以左边计算\n    el.x = this.right + this.offsetX\n    el.y = this.y + this.getOffsetY(el)\n    // + (this.height - el.renderStyles.height) / 2\n    this.right += el.renderStyles.width\n\n  }\n\n  getOffsetY(el) {\n    if (el.renderStyles.verticalAlign === 'bottom') {\n      return (this.height - el.renderStyles.height)\n    } else if (el.renderStyles.verticalAlign === 'middle') {\n      return (this.height - el.renderStyles.height) / 2\n    } else {\n      return 0\n    }\n  }\n\n\n  add(el) {\n    this.elements.push(el)\n    el.line = this\n    this.refreshWidthHeight(el)\n\n    if (!el.next || el.next.renderStyles.display !== 'inline-block') {\n      this.closeLine()\n    }\n  }\n\n  refreshWidthHeight(el) {\n    if (el.renderStyles.height > this.height) {\n      this.height = el.renderStyles.height\n    }\n\n    this.width += el.renderStyles.width\n  }\n\n  canIEnter(el) {\n    if ((el.renderStyles.width + this.width) > this.outerWidth) {\n      this.closeLine()\n      return false\n    } else {\n      return true\n    }\n  }\n\n  closeLine() {\n    // new line\n    this.end = this.elements[this.elements.length - 1]\n    this.refreshXAlign()\n\n  }\n\n  getPreLine(el) {\n    if (el.pre) {\n      if (el.pre.line) {\n        return { y: el.pre.line.height + el.pre.line.y, x: el.pre.line.x }\n      } else {\n        return { y: el._getPreLayout().y + el._getPreLayout().height, x: el._getPreLayout().x }\n      }\n    } else {\n      return { y: el._getContainerLayout().contentY, x: el._getContainerLayout().contentX }\n    }\n  }\n\n  refreshXAlign() {\n    if (this.outerWidth > 5000) return\n    if (!this.end.parent) return\n    let offsetX = this.outerWidth - this.width\n    if (this.end.parent.renderStyles.textAlign === 'center') {\n      offsetX = offsetX / 2\n    } else if (this.end.parent.renderStyles.textAlign === 'left') {\n      offsetX = 0\n    }\n    this.offsetX = offsetX\n  }\n}\n","import Line from './line'\nimport { isExact, isAuto } from './utils'\nimport STYLES from './constants'\n\nconst KEY = {\n  [STYLES.FLEX_DIRECTION.ROW]: {\n    width: 'width',\n    contentWidth: 'contentWidth',\n    x: 'x',\n    y: 'y',\n    contentX: 'contentX',\n    height: 'height',\n    contentHeight: 'contentHeight'\n  },\n  [STYLES.FLEX_DIRECTION.COLUMN]: {\n    width: 'height',\n    contentWidth: 'contentHeight',\n    x: 'y',\n    y: 'x',\n    contentX: 'contentY',\n    height: 'width',\n    contentHeight: 'contentWidth'\n  }\n}\n// 目前flex是基于inline-block的简单实现，只支持row方向width + flex混用\nexport default class FlexBox extends Line {\n  constructor() {\n    super()\n    this.exactValue = 0\n    this.flexTotal = 0\n    this.key = null\n  }\n\n  closeLine() {\n    super.closeLine()\n    this.calcFlex()\n  }\n\n  bind(el) {\n    this.container = el.parent\n    if (el.parent) {\n      this.key = KEY[el.parent.renderStyles.flexDirection]\n    }\n    this.initHeight(el)\n    this.outerWidth = el.parent && isAuto(el.parent.styles[this.key.width]) ? Infinity : el.parent.renderStyles[this.key.contentWidth]\n    this.start = el\n    this.add(el)\n  }\n\n  add(el) {\n    if (isExact(el.styles[this.key.width])) {\n      this.exactValue += el.renderStyles[this.key.width]\n    } else if (isExact(el.styles.flex)) {\n      this.flexTotal += el.renderStyles.flex\n    }\n\n    this.elements.push(el)\n    el.line = this\n    this.refreshWidthHeight(el)\n\n    if (!el.next) {\n      this.closeLine()\n    }\n  }\n\n  initHeight() {\n    this[this.key.height] = 0\n  }\n\n  refreshWidthHeight(el) {\n    if (el.renderStyles[this.key.height] > this[this.key.height]) {\n      this[this.key.height] = el.renderStyles[this.key.height]\n    }\n\n    this[this.key.width] += el.renderStyles[this.key.width]\n  }\n\n  initLayout(el) {\n    this.right = el._getContainerLayout()[this.key.contentX]\n    this[this.key.x] = el._getContainerLayout()[this.key.contentX]\n    this[this.key.y] = this.getPreLine(el)[this.key.y]\n  }\n\n  refreshElementPosition(el) {\n    if (this.start === el) {\n      this.initLayout(el)\n    }\n    // 刷新位置，首先以左边计算\n    el[this.key.x] = this.right + this.offsetX\n    el[this.key.y] = this[this.key.y] + this.getOffsetY(el)\n    // + (this.height - el.renderStyles.height) / 2\n    this.right += el.renderStyles[this.key.width]\n\n  }\n\n  calcFlex() {\n    const { [this.key.contentWidth]: containerWidth } = this.container.renderStyles\n    this.elements.forEach(child => {\n      if (isExact(child.styles.flex)) {\n        child.renderStyles[this.key.width] = (child.styles.flex / this.flexTotal) * (containerWidth - this.exactValue)\n        child._refreshContentWithLayout()\n      }\n    })\n  }\n\n  refreshXAlign() {\n    if (!this.end.parent) return\n    let offsetX = this.outerWidth - this[this.key.width]\n    if (this.end.parent.renderStyles.justifyContent === 'center') {\n      offsetX = offsetX / 2\n    } else if (this.end.parent.renderStyles.justifyContent === 'flex-start') {\n      offsetX = 0\n    }\n    this.offsetX = offsetX\n  }\n\n  getOffsetY(el) {\n    if (el.renderStyles.alignSelf === 'flex-end') {\n      return (this.container.renderStyles[this.key.contentHeight] - el.renderStyles[this.key.height])\n    } else if (el.renderStyles.alignSelf === 'center') {\n      return (this.container.renderStyles[this.key.contentHeight] - el.renderStyles[this.key.height]) / 2\n    } else {\n      return 0\n    }\n  }\n}\n","export default class TreeNode {\n\n  static connectChildren(el) {\n    if (el.hasChildren()) {\n      el.children = el.children.filter(item => item instanceof TreeNode)\n      el._getChildren().map((child, index) => {\n        // 设置parent\n        child._setParent(el)\n        // 设置了上一个兄弟节点\n        child._setSibling(el._getChildren()[index - 1], el._getChildren()[index + 1])\n        TreeNode.connectChildren(child)\n      })\n    } else {\n    }\n  }\n\n  constructor(children) {\n    this.children = children || []\n    this.parent = null\n    this.root = null\n    this.pre = null\n    this.next = null\n  }\n\n\n\n  hasChildren() {\n    return Array.isArray(this.children) && this.children.length ? true : false\n  }\n\n  _getChildren() {\n    return this.hasChildren() ? this.children : []\n  }\n\n  _setParent(element) {\n    this.parent = element\n    this.root = element.root\n  }\n\n  _setSibling(pre, next) {\n    this.pre = pre || null\n    this.next = next || null\n  }\n\n\n  // 添加在最后\n  appendChild(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    const pre = this._getChildren()[this._getChildren().length - 1]\n    pre && pre._setSibling(pre.pre, treeNode)\n    this.children.push(treeNode)\n    treeNode._setParent(this)\n    treeNode._setSibling(pre, null)\n    // return treeNode\n  }\n\n  //\n  prependChild(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    const next = this._getChildren()[0]\n    next && next._setSibling(treeNode, next.next)\n    this.children.unshift(treeNode)\n    treeNode._setParent(this)\n    treeNode._setSibling(null, next)\n    // return treeNode\n  }\n\n  removeChild(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    const index = this._getChildren().indexOf(treeNode)\n    if (index < 0) throw Error('treeNode must be the child of parent')\n    const pre = this._getChildren()[index - 1]\n    const next = this._getChildren()[index + 1]\n    if (pre) {\n      pre._setSibling(pre.pre, next)\n    }\n    if (next) {\n      next._setSibling(pre, next.next)\n    }\n    this.children.splice(index, 1)\n  }\n\n  remove() {\n    if (!this.parent) {\n      throw Error('Can not remove root node')\n    }\n    this.parent.removeChild(this)\n  }\n\n  append(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    if (!this.parent) throw Error('Can not add treeNode to root level!')\n    let children = []\n    treeNode._setParent(this.parent)\n    this.parent.children.forEach((child, index) => {\n      children.push(child)\n      if (child === this) {\n        treeNode._setSibling(child, this.parent.children[index + 1])\n        children.push(treeNode)\n      }\n    })\n    this.parent.children = children\n  }\n\n  prepend(treeNode) {\n    if (!treeNode instanceof TreeNode) throw Error('Unknown treeNode type')\n    if (!this.parent) throw Error('Can not add treeNode to root level!')\n    let children = []\n    treeNode._setParent(this.parent)\n    for (let i = this.parent.children.length - 1; i >= 0; i--) {\n      children.unshift(this.parent.children[i])\n      if (this.parent.children[i] === this) {\n        treeNode._setSibling(this.parent.children[i - 1], this.parent.children[i])\n        children.unshift(treeNode)\n      }\n    }\n    this.parent.children = children\n  }\n\n\n}\n","import { isExact, isAuto, isOuter } from './utils'\nimport STYLES from './constants'\n\n\nexport default function (element) {\n  _completeFlex(element)\n\n  _completeWidth(element)\n\n  _completeBorder(element)\n\n  _completeFont(element)\n\n  _completePaddingMargin(element)\n}\n\n\nfunction _completePaddingMargin(element) {\n  if (element.styles.padding) {\n    if (isExact(element.styles.padding)) {\n      element.styles.paddingLeft = element.styles.padding\n      element.styles.paddingBottom = element.styles.padding\n      element.styles.paddingRight = element.styles.padding\n      element.styles.paddingTop = element.styles.padding\n    } else if (Array.isArray(element.styles.padding)) {\n      // 支持数组[10,20]相当于padding:10px 20px;\n      if (element.styles.padding.length === 2) {\n        element.styles.paddingLeft = element.styles.paddingRight = element.styles.padding[1]\n        element.styles.paddingBottom = element.styles.paddingTop = element.styles.padding[0]\n      } else if (element.styles.padding.length === 4) {\n        element.styles.paddingLeft = element.styles.padding[3]\n        element.styles.paddingBottom = element.styles.padding[2]\n        element.styles.paddingRight = element.styles.padding[1]\n        element.styles.paddingTop = element.styles.padding[0]\n      }\n    }\n  }\n\n  if (isExact(element.styles.margin)) {\n    element.styles.marginLeft = element.styles.margin\n    element.styles.marginBottom = element.styles.margin\n    element.styles.marginRight = element.styles.margin\n    element.styles.marginTop = element.styles.margin\n  } else if (Array.isArray(element.styles.margin)) {\n    // 支持数组[10,20]相当于padding:10px 20px;\n    if (element.styles.margin.length === 2) {\n      element.styles.marginLeft = element.styles.marginRight = element.styles.margin[1]\n      element.styles.marginBottom = element.styles.marginTop = element.styles.margin[0]\n    } else if (element.styles.margin.length === 4) {\n      element.styles.marginLeft = element.styles.margin[3]\n      element.styles.marginBottom = element.styles.margin[2]\n      element.styles.marginRight = element.styles.margin[1]\n      element.styles.marginTop = element.styles.margin[0]\n    }\n  }\n}\n\n/**\n * borderwidth到各个边\n */\nfunction _completeBorder(element) {\n  let { borderWidth, borderLeftWidth, borderRightWidth, borderBottomWidth, borderTopWidth, borderRadius } = element.styles\n  if (!borderWidth) {\n    element.styles.borderWidth = 0\n    borderWidth = 0\n  }\n  if (Array.isArray(borderWidth)) {\n    element.styles.borderTopWidth = borderWidth[0]\n    element.styles.borderRightWidth = borderWidth[1]\n    element.styles.borderBottomWidth = borderWidth[2]\n    element.styles.borderLeftWidth = borderWidth[3]\n  } else {\n    if (!borderLeftWidth) {\n      element.styles.borderLeftWidth = borderWidth\n    }\n    if (!borderRightWidth) {\n      element.styles.borderRightWidth = borderWidth\n    }\n    if (!borderBottomWidth) {\n      element.styles.borderBottomWidth = borderWidth\n    }\n    if (!borderTopWidth) {\n      element.styles.borderTopWidth = borderWidth\n    }\n  }\n  if (borderRadius) {\n    element.styles.overflow = 'hidden'\n  }\n}\n\nfunction _completeWidth(element) {\n  if (!element.styles.width) {\n    if (element.styles.display === STYLES.DISPLAY.INLINE_BLOCK || element.styles.display === STYLES.DISPLAY.INLINE || !element.isInFlow()) {\n      element.styles.width = STYLES.WIDTH.AUTO\n    } else if (element.styles.display === STYLES.DISPLAY.BLOCK || element.styles.display === STYLES.DISPLAY.FLEX) {\n      element.styles.width = STYLES.WIDTH.OUTER\n    } else {\n      element.styles.width = 0\n    }\n  }\n\n  if (isOuter(element.styles.width)) {\n    if (element.parent && isAuto(element.parent.styles.width)) {\n      element.styles.width = STYLES.WIDTH.AUTO\n    }\n  }\n\n  if (isOuter(element.styles.height)) {\n    if (element.parent && isAuto(element.parent.styles.height)) {\n      element.styles.height = STYLES.WIDTH.AUTO\n    }\n  }\n}\n\nfunction _completeFont(element) {\n  if (element.styles.fontSize && !element.styles.lineHeight) {\n    element.styles.lineHeight = element.styles.fontSize * 1.4\n  }\n}\n\nfunction _completeFlex(element) {\n  if (element.parent && element.parent.styles.display === STYLES.DISPLAY.FLEX) {\n    // flex布局内 width 和flex需要有一个\n    if (!element.styles.flex) {\n      if (!isExact(element.styles.height) && !isExact(element.styles.width)) {\n        element.styles.flex = 1\n      }\n    } else {\n      if (element.parent.styles.flexDirection === 'column' && isExact(element.styles.flex)) {\n        element.styles.height = 0\n      } else if (element.parent.styles.flexDirection === 'row' && isExact(element.styles.flex)) {\n        element.styles.width = 0\n      }\n    }\n\n  }\n}\n","import STYLES from './constants'\nimport pxUtil from './px'\nimport { isExact, walk, isOuter, parseOuter, walkParent, isEndNode, isAuto, findRelativeTo, needReflow, floor } from './utils'\nimport Line from './line'\nimport FlexBox from './flex-box'\nimport TreeNode from './tree-node'\nimport completeStyles from './complete-styles'\n\n/**\n * Element类实现盒模型以及定位，不具备绘制\n * 其他类继承实现\n *\n */\n\n\n\n\nexport default class Element extends TreeNode {\n  constructor(options, children) {\n    super(children)\n    this.options = Object.assign({ attrs: {}, styles: {}, on: {} }, options)\n    this.styles = null\n    this.renderStyles = null\n    this.x = 0\n    this.y = 0\n    this.render = null\n    this.container = null\n    this.visible = true\n  }\n\n  init() {\n    this._initStyles()\n    this.initEvent()\n  }\n\n  initEvent() {\n    if (this.options.on) {\n      Object.keys(this.options.on).forEach(eventName => {\n        if (this.getLayer().eventManager.EVENTS.includes(eventName)) {\n          this.getLayer().eventManager.addEventListener(eventName, this.options.on[eventName], this)\n        }\n      })\n    }\n  }\n\n  removeEvent() {\n    this.getLayer().eventManager.removeElement(this)\n  }\n\n  getLayer() {\n    return this.root.layer\n  }\n\n  getRender() {\n    return this.root.layer.render\n  }\n\n  _paint() {\n\n  }\n\n  mount(layer) {\n    layer.mountNode(this)\n  }\n\n  _initStyles() {\n    this.styles = Object.assign({}, this._getDefaultStyles(), this._getParentStyles(this.options.styles), this.options.styles || {})\n\n    this._completeStyles()\n\n    this._initRenderStyles()\n  }\n\n  _initRenderStyles() {\n    const renderStyles = { ...this.styles }\n    const parentWidth = this._getContainerLayout().contentWidth\n    const parentHeight = this._getContainerLayout().contentHeight\n\n    if (isAuto(renderStyles.width)) {\n      renderStyles.paddingWidth = 0\n    } else if (isOuter(renderStyles.width)) {\n      renderStyles.paddingWidth = parseOuter(renderStyles.width) * parentWidth - renderStyles.marginLeft - renderStyles.marginRight\n    } else {\n      renderStyles.paddingWidth = renderStyles.width\n    }\n\n    if (isAuto(renderStyles.height)) {\n      renderStyles.paddingHeight = 0\n    } else if (isOuter(renderStyles.height)) {\n      renderStyles.paddingHeight = parseOuter(renderStyles.height) * parentHeight - renderStyles.marginTop - renderStyles.marginBottom\n    } else {\n      renderStyles.paddingHeight = renderStyles.height\n    }\n\n    if (!renderStyles.paddingWidth) renderStyles.paddingWidth = 0\n    if (!renderStyles.paddingHeight) renderStyles.paddingHeight = 0\n\n    // 初始化contentWidth\n    renderStyles.contentWidth = renderStyles.paddingWidth - renderStyles.paddingLeft - renderStyles.paddingRight\n    renderStyles.contentHeight = renderStyles.paddingHeight - renderStyles.paddingTop - renderStyles.paddingBottom\n\n    renderStyles.width = renderStyles.paddingWidth + renderStyles.marginLeft + renderStyles.marginRight + this._getTotalBorderWidth(renderStyles)\n    renderStyles.height = renderStyles.paddingHeight + renderStyles.marginTop + renderStyles.marginBottom + this._getTotalBorderHeight(renderStyles)\n\n    this.renderStyles = renderStyles\n\n    if (this._InFlexBox()) {\n      this._bindFlexBox()\n    } else if (!this.isInFlow()) {\n      this.relativeTo = findRelativeTo(this)\n    }\n\n\n  }\n\n  /**\n   * 需要继承的styles放在这里\n   */\n  _getParentStyles(curStyles) {\n    let { textAlign, lineHeight, fontSize, color, fontFamily, alignItems, visible = true } = this.parent && this.parent.renderStyles || {}\n    let extendStyles = {}\n    if (textAlign) extendStyles.textAlign = textAlign\n    if (fontSize) extendStyles.fontSize = fontSize\n    if (color) extendStyles.color = color\n    if (fontFamily) extendStyles.fontFamily = fontFamily\n    if (alignItems && !curStyles.alignSelf) extendStyles.alignSelf = alignItems\n    extendStyles.visible = visible\n    return extendStyles\n  }\n\n  _completeStyles() {\n    completeStyles(this)\n  }\n\n  _getDefaultStyles() {\n    return STYLES.DEFAULT_STYLES\n  }\n\n  // 获取文档流中的子节点\n  _getChildrenInFlow() {\n    return this._getChildren().filter(item => item.isInFlow())\n  }\n\n  // 是否在文档流中\n  isInFlow() {\n    const { position, display } = this.styles\n    return position !== STYLES.POSITION.ABSOLUTE && position !== STYLES.POSITION.FIXED\n  }\n\n  isVisible() {\n    return this.renderStyles.visible && this.visible\n  }\n\n  _generateRender() {\n    return this\n  }\n\n  getCtx() {\n    return this.root.layer.ctx\n  }\n\n  /**\n   * 实现文档流 需要知道上一个兄弟节点\n   */\n  _reflow() {\n\n\n  }\n\n  _initWidthHeight() {\n    const { width, height, display, flex, marginLeft, marginRight, marginTop, marginBottom } = this.styles\n    if (isAuto(width) || isAuto(height)) {\n      // 这一步需要遍历，判断一下\n      const layout = this._measureLayout()\n      // 初始化宽度高度\n      if (isAuto(width)) {\n        this.renderStyles.contentWidth = floor(layout.width)\n      }\n\n      if (isAuto(height)) {\n        // 不填就是auto\n        this.renderStyles.contentHeight = floor(layout.height)\n      }\n    }\n\n    this._refreshLayoutWithContent()\n\n    if (this._InFlexBox()) {\n      this.line.refreshWidthHeight(this)\n    } else if (display === STYLES.DISPLAY.INLINE_BLOCK) {\n      // 如果是inline-block  这里仅计算高度\n      this._bindLine()\n    }\n  }\n\n  _initPosition() {\n    let { contentX } = this._getContainerLayout()\n    const { paddingLeft, paddingTop, borderLeftWidth, borderTopWidth, marginLeft, marginTop } = this.renderStyles\n    // 初始化ctx位置\n    if (!this.isInFlow()) {\n      // 不在文档流中\n      let { contentX, contentY, contentWidth, contentHeight } = this._getContainerLayout(this.relativeTo)\n      let { top, bottom, right, left, width, height } = this.renderStyles\n      if (isOuter(top)) top = parseOuter(top) * contentHeight\n      if (isOuter(bottom)) bottom = parseOuter(bottom) * contentHeight\n      if (isOuter(left)) left = parseOuter(left) * contentWidth\n      if (isOuter(right)) right = parseOuter(right) * contentWidth\n      if (isExact(top)) {\n        this.y = contentY + top\n      } else if (isExact(bottom)) {\n        this.y = contentY + contentHeight - bottom - height\n      }\n\n      if (isExact(left)) {\n        this.x = contentX + left\n      } else if (isExact(right)) {\n        this.x = contentX + contentWidth - right - width\n      }\n    } else if (this._InFlexBox()) {\n      this.line.refreshElementPosition(this)\n    } else if (this.renderStyles.display === STYLES.DISPLAY.INLINE_BLOCK) {\n      // inline-block到line里计算\n      // this._bindLine()\n      this.line.refreshElementPosition(this)\n    } else {\n      this.x = contentX\n      this.y = this._getPreLayout().y + this._getPreLayout().height\n    }\n    this.x = floor(this.x)\n    this.y = floor(this.y)\n    this.contentX = this.x + paddingLeft + borderLeftWidth + marginLeft\n    this.contentY = this.y + paddingTop + borderTopWidth + marginTop\n  }\n\n  _InFlexBox() {\n    if (!this.isInFlow()) return false\n    if (!this.parent) return false\n    if (this.parent && this.parent.renderStyles.display === STYLES.DISPLAY.FLEX) return true\n  }\n\n\n  // 父元素根据子元素撑开content后，再计算width\n  _refreshLayoutWithContent() {\n    this.renderStyles.height = floor(this.renderStyles.contentHeight + this.renderStyles.paddingTop + this.renderStyles.paddingBottom + this.renderStyles.marginTop + this.renderStyles.marginBottom + this._getTotalBorderHeight())\n    this.renderStyles.width = floor(this.renderStyles.contentWidth + this.renderStyles.paddingLeft + this.renderStyles.paddingRight + this.renderStyles.marginLeft + this.renderStyles.marginRight + this._getTotalBorderWidth())\n    this.renderStyles.paddingWidth = floor(this.renderStyles.contentWidth + this.renderStyles.paddingLeft + this.renderStyles.paddingRight)\n    this.renderStyles.paddingHeight = floor(this.renderStyles.contentHeight + this.renderStyles.paddingTop + this.renderStyles.paddingBottom)\n  }\n\n  // 父元素根据子元素撑开content后，再计算width\n  _refreshContentWithLayout() {\n    this.renderStyles.contentHeight = this.renderStyles.height - this.renderStyles.paddingTop - this.renderStyles.paddingBottom - this.renderStyles.marginTop - this.renderStyles.marginBottom - this._getTotalBorderHeight()\n    this.renderStyles.contentWidth = this.renderStyles.width - this.renderStyles.paddingLeft - this.renderStyles.paddingRight - this.renderStyles.marginLeft - this.renderStyles.marginRight - this._getTotalBorderWidth()\n    this.renderStyles.paddingWidth = floor(this.renderStyles.contentWidth + this.renderStyles.paddingLeft + this.renderStyles.paddingRight)\n    this.renderStyles.paddingHeight = floor(this.renderStyles.contentHeight + this.renderStyles.paddingTop + this.renderStyles.paddingBottom)\n  }\n\n  _getTotalBorderWidth(renderStyles = this.renderStyles) {\n    return renderStyles.borderLeftWidth + renderStyles.borderRightWidth\n  }\n\n  _getTotalBorderHeight(renderStyles = this.renderStyles) {\n    return renderStyles.borderTopWidth + renderStyles.borderBottomWidth\n  }\n\n  _bindLine() {\n    if (this.pre && this.pre.line && this.pre.line.canIEnter(this)) {\n      this.pre.line.add(this)\n    } else {\n      // 新行\n      new Line().bind(this)\n    }\n  }\n\n  _bindFlexBox() {\n    if (this.pre && this.pre.line) {\n      this.pre.line.add(this)\n    } else {\n      // 新行\n      new FlexBox().bind(this)\n    }\n  }\n\n  _getContainerLayout(container = this.parent) {\n    if (!container) {\n      // root\n      if (!this.container) {\n        debugger\n      }\n      container = {\n        renderStyles: {\n          width: this.container.width,\n          height: this.container.height,\n          paddingTop: 0,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: 0,\n          marginBottom: 0,\n          contentWidth: this.container.width,\n          contentHeight: this.container.height\n        },\n        x: 0,\n        y: 0,\n        contentX: 0,\n        contentY: 0\n      }\n    }\n    return {\n      width: container.renderStyles.width,\n      height: container.renderStyles.height,\n      x: container.x,\n      y: container.y,\n      paddingTop: container.renderStyles.paddingTop,\n      paddingBottom: container.renderStyles.paddingBottom,\n      paddingLeft: container.renderStyles.paddingLeft,\n      paddingRight: container.renderStyles.paddingRight,\n      marginLeft: container.renderStyles.marginLeft,\n      marginRight: container.renderStyles.marginRight,\n      marginTop: container.renderStyles.marginTop,\n      marginBottom: container.renderStyles.marginBottom,\n      contentX: container.contentX,\n      contentY: container.contentY,\n      contentWidth: container.renderStyles.contentWidth,\n      contentHeight: container.renderStyles.contentHeight\n    }\n  }\n\n  // 这里前一个节点必须在文档流中\n  _getPreLayout() {\n    let cur = this.pre\n    while (cur && !cur.isInFlow()) {\n      cur = cur.pre\n    }\n    // 如果没有前一个或者前面的都不在文档流中，获取容器的\n    if (cur) {\n      return {\n        width: cur.renderStyles.width,\n        height: cur.renderStyles.height,\n        x: cur.x,\n        y: cur.y\n      }\n    } else {\n      return {\n        width: 0,\n        height: 0,\n        x: this._getContainerLayout().contentX,\n        y: this._getContainerLayout().contentY\n      }\n    }\n  }\n\n  // 计算自身的高度\n  _measureLayout() {\n    let width = 0 // 需要考虑原本的宽度\n    let height = 0\n    this._getChildrenInFlow().forEach(child => {\n      if (child.line) {\n        if (child.line.start === child) {\n          if (child.line.width > width) {\n            width = child.line.width\n          }\n          height += child.line.height\n        }\n      } else if (child.renderStyles.width > width) {\n        width = child.renderStyles.width\n        height += child.renderStyles.height\n      } else {\n        height += child.renderStyles.height\n      }\n    })\n\n    return { width, height }\n  }\n\n  // 获取元素，只会找该元素子级\n  getElementBy(key, value) {\n    let match = []\n    walk(this, (element) => {\n      if (element.options.attrs[key] === value) {\n        match.push(element)\n      }\n    })\n    return match\n  }\n\n  // 添加在最后\n  appendChild(element) {\n    super.appendChild(element)\n    this.getLayer().onElementAdd(element)\n    return element\n  }\n\n  //\n  prependChild(element) {\n    super.prependChild(element)\n    this.getLayer().onElementAdd(element)\n    return element\n  }\n\n  removeChild(element) {\n    super.removeChild(element)\n    this.getLayer().onElementRemove(element)\n  }\n\n  append(element) {\n    super.append(element)\n    this.getLayer().onElementAdd(element)\n  }\n\n  prepend(element) {\n    super.prepend(element)\n    this.getLayer().onElementAdd(element)\n  }\n\n  setStyles(styles) {\n    let _needReflow = false\n    Object.keys(styles).forEach(key => {\n      if (needReflow(key)) {\n        _needReflow = true\n      } else {\n        this.renderStyles[key] = styles[key]\n      }\n    })\n    if (_needReflow) {\n      Object.keys(styles).forEach(key => {\n        this.options.styles[key] = styles[key]\n      })\n      this.getLayer().reflowElement(this, this)\n      // console.warn('实验性功能')\n    } else {\n      this.getRender().requestRepaint()\n    }\n  }\n\n}\n","import Element from './element'\nimport STYLES from './constants'\nimport { isExact } from './utils'\n\nexport default class View extends Element {\n\n  constructor(options, children) {\n    super(options, children)\n    this.type = 'view'\n  }\n\n  _getDefaultStyles() {\n    return {\n      ...STYLES.DEFAULT_STYLES,\n      display: STYLES.DISPLAY.BLOCK\n    }\n  }\n\n  _paint() {\n    this.getRender()._drawBackground(this)\n    this.getRender()._drawBox(this)\n  }\n\n\n}\n","import Element from './element'\nimport STYLES from './constants'\nimport { isExact, isAuto } from './utils'\n\nexport default class Text extends Element {\n  constructor(options, children) {\n    super(options, children)\n    this._layout = null // layout用来保存计算的自身高度\n    this._lines = []\n    this.children += ''\n    this.type = 'text'\n  }\n\n  _paint() {\n    this.getRender()._drawBackground(this)\n    this.getRender()._drawText(this)\n    this.getRender()._drawBox(this)\n  }\n\n  _getDefaultStyles() {\n    return {\n      ...STYLES.DEFAULT_STYLES,\n      display: STYLES.DISPLAY.INLINE_BLOCK,\n      width: STYLES.WIDTH.AUTO,\n      textAlign: 'left',\n    }\n  }\n\n  _measureLayout() {\n    this._layout = this.getRender().measureText(this, this.children)\n    this._layout.fontHeight = this.renderStyles.fontSize * 0.8\n    this._layout.height = this.renderStyles.lineHeight\n    this._calcLine()\n    return this._layout\n  }\n\n  _getFont() {\n    const { fontSize, fontWeight, fontFamily } = this.renderStyles\n    return `${fontWeight} ${fontSize}px ${fontFamily}`\n  }\n\n  _calcLine() {\n    if (!this.parent || !this.children) return\n    const { width: textWidth, height: textHeight } = this._layout\n    let { contentWidth: parentContentWidth } = this.parent.renderStyles\n    const { width: parentWidth } = this.parent.styles\n    if (!isAuto(this.styles.width)) parentContentWidth = this.renderStyles.width\n    // 如果一行宽度够，或者父级宽度是auto\n    if ((isExact(parentContentWidth) && parentContentWidth >= textWidth) || parentWidth === STYLES.WIDTH.AUTO) {\n      this._lines = [{\n        text: this.children,\n        layout: this._layout\n      }]\n    } else {\n      this._lines = []\n      let lineIndex = 1\n      let lineText = ''\n      let _layout = null\n      let lastLayout = null\n      for (let i = 0; i < this.children.length; i++) {\n        _layout = this.getRender().measureText(this, lineText + this.children[i])\n        if (_layout.width > parentContentWidth) {\n          if (lineIndex >= this.renderStyles.maxLine) {\n            // 最大行数限制 以及maxline省略号实现\n            lineText = lineText.substring(0, lineText.length - 2) + '...'\n            break\n          }\n          // 超出了\n          this._lines.push({\n            text: lineText,\n            layout: lastLayout || _layout\n          })\n          lineText = ''\n          lineIndex += 1\n\n        }\n\n        lineText += this.children[i]\n\n        lastLayout = _layout\n      }\n      this._layout.width = parentContentWidth\n      this._lines.push({\n        text: lineText,\n        layout: this.getRender().measureText(this, lineText)\n      })\n      // 根据lineheihgt更新height\n      this._layout.height = this._lines.length * this.renderStyles.lineHeight\n    }\n  }\n\n  getInnerText() {\n    return this.children\n  }\n\n  setInnerText(val) {\n    if (val === undefined) return\n    if (val === this.children) return\n    this.children = val\n    this.getLayer().reflowElement(this)\n  }\n}\n","import View from './view'\nimport STYLES from './constants'\nimport { isExact, isAuto, isWX } from './utils'\nimport { getImage } from './weapp-adapter'\n\nexport default class $Image extends View {\n\n  constructor(options, children) {\n    super(options, children)\n    this.type = 'image'\n    this._imageInfo = {\n      width: 0,\n      height: 0,\n      sx: 0,\n      sy: 0,\n      swidth: 0,\n      sheight: 0,\n      dx: 0,\n      dy: 0,\n      dwidth: 0,\n      dheight: 0\n    }\n    this.debugColor = 'blue'\n    this._image = null\n    this._layout = null\n  }\n\n  init() {\n    super.init()\n    this._loadImage()\n  }\n\n  _paint() {\n    this.getRender()._drawBackground(this)\n    this.getRender()._drawImage(this)\n    this.getRender()._drawBox(this)\n  }\n\n  _loadImage() {\n    const { mode } = this.options.attrs\n\n    return new Promise((resolve, reject) => {\n      this.getRender().getImageInstance(this.options.attrs.src)\n        .then(({ info, image }) => {\n          this._imageInfo = info\n          this._image = image\n          resolve()\n\n          this._layoutImage()\n\n          if (this.isVisible()) {\n            // if (mode === 'aspectFill' || mode === 'aspectFit') {\n            //   // this.getLayer().onElementChange(this)\n            //   this.getLayer().repaint(this)\n            // } else {\n            // // 重新布局绘制\n              this.getLayer().reflowElement(this)\n            // }\n          }\n\n          // call load callback\n          if (this.options.on && this.options.on.load) {\n            this.options.on.load(this)\n          }\n        })\n        .catch(err => {\n          // call error callback\n          if (this.options.on && this.options.on.error) {\n            this.options.on.error(err)\n          }\n        })\n    })\n  }\n\n  // 计算图片布局\n  _layoutImage() {\n    const { contentWidth, contentHeight } = this.renderStyles\n    const { mode } = this.options.attrs\n    const { width, height } = this.styles\n    const { width: imageW, height: imageH } = this._imageInfo\n    // 根据用户设置判断图片宽高，目前支持widthfix、heightfix、平铺\n    let w = contentWidth\n    let h = contentHeight\n    if (!isAuto(width) && isAuto(height)) {\n      // width fix\n      w = contentWidth\n      h = getHeightByWidth(w, imageW, imageH)\n    } else if (!isAuto(height) && isAuto(width)) {\n      // height fix\n      h = contentHeight\n      w = getWidthByHeight(h, imageW, imageH)\n    } else if (isAuto(width) && isAuto(height)) {\n      // auto\n      w = imageW\n      h = imageH\n    } else if (mode === 'aspectFill') {\n      // 填充\n      if ((w / h) > (imageW / imageH)) {\n        this._imageInfo.swidth = imageW\n        this._imageInfo.sheight = getHeightByWidth(imageW, w, h)\n        this._imageInfo.sx = 0\n        this._imageInfo.sy = (imageH - this._imageInfo.sheight) / 2\n      } else {\n        this._imageInfo.sheight = imageH\n        this._imageInfo.swidth = getWidthByHeight(imageH, contentWidth, contentHeight)\n        this._imageInfo.sy = 0\n        this._imageInfo.sx = (imageW - this._imageInfo.swidth) / 2\n      }\n    } else if (mode === 'aspectFit') {\n      if ((w / h) > (imageW / imageH)) {\n        this._imageInfo.dwidth = getWidthByHeight(contentHeight, imageW, imageH)\n        this._imageInfo.dheight = contentHeight\n        this._imageInfo.dy = this.contentY\n        this._imageInfo.dx = (contentWidth - this._imageInfo.dwidth) / 2 + this.contentX\n      } else {\n        this._imageInfo.dheight = getHeightByWidth(contentWidth, imageW, imageH)\n        this._imageInfo.dwidth = contentWidth\n        this._imageInfo.dx = this.contentX\n        this._imageInfo.dy = (contentHeight - this._imageInfo.dheight) / 2 + this.contentY\n      }\n    } else {\n      w = contentWidth\n      h = contentHeight\n    }\n    this._layout = { width: w, height: h }\n  }\n\n  _measureLayout() {\n    if (this._layout) {\n      return this._layout\n    } else {\n      return {\n        width: this.renderStyles.width,\n        height: this.renderStyles.height\n      }\n    }\n  }\n\n}\n\n\nfunction getWidthByHeight(height, originWidth, originHeight) {\n  return height / originHeight * originWidth\n}\n\nfunction getHeightByWidth(width, originWidth, originHeight) {\n  return width / originWidth * originHeight\n}\n","import TreeNode from './tree-node'\nimport { walkParent, walk } from './utils'\nconst events = ['click','touchstart','touchmove','touchend','mousewheel']\nexport default class EventManager {\n\n  constructor({ simulateClick = true }) {\n    this.EVENTS = events\n    this.clear()\n    this.touchStartEvent = null\n    this.simulateClick = simulateClick // 是否模拟移动端点击事件\n  }\n\n  clear() {\n    events.forEach(eventName => {\n      this[`${eventName}Tree`] = new TreeNode()\n      this[`${eventName}List`] = []\n    })\n  }\n\n  click(x, y) {\n    let event = new Event({ x, y, type: 'click' })\n    this._emit(event)\n  }\n\n  touchstart(x, y) {\n    let event = new Event({ x, y, type: 'touchstart' })\n    this.touchStartEvent = event\n    this._emit(event)\n  }\n\n  touchmove(x, y) {\n    let event = new Event({ x, y, type: 'touchmove' })\n    this._emit(event)\n  }\n\n  touchend(x, y) {\n    let event = new Event({ x, y, type: 'touchend' })\n    this._emit(event)\n    this.checkClick(event)\n  }\n\n  mousewheel(x,y,deltaX,deltaY){\n    let event = new Event({ x, y,deltaX,deltaY, type: 'mousewheel' })\n    this._emit(event)\n  }\n\n  _emit(e) {\n    let tree = this[`${e.type}Tree`]\n    if(!tree) return\n\n    /**\n     * 遍历树，检查是否回调\n     * 如果父级没有被触发，则子级也不需要检查，跳到下个同级节点\n     * 执行capture回调，将on回调添加到stack\n     */\n    let callbackList = []\n    let curArr = tree._getChildren()\n    while (curArr.length) {\n      walkArray(curArr, (node, callBreak, isEnd) => {\n        if (node.element.isVisible() && this.isPointInElement(e.relativeX, e.relativeY, node.element)) {\n          node.runCapture(e)\n          callbackList.unshift(node)\n          // 同级后面节点不需要执行了\n          callBreak()\n          curArr = node._getChildren()\n        } else if (isEnd) {\n          // 到最后一个还是没监测到，结束\n          curArr = []\n        }\n      })\n    }\n\n    /**\n     * 执行on回调，从子到父\n     */\n    for (let i = 0; i < callbackList.length; i++) {\n      if (!e.currentTarget) e.currentTarget = callbackList[i].element\n      callbackList[i].runCallback(e)\n      if (e.cancelBubble) break\n    }\n  }\n\n  // 待优化\n  isPointInElement(x, y, element) {\n    let a1 = x >= element.x\n    let a2 = y >= element.y\n    let a3 = (x <= (element.x + element.renderStyles.width))\n    let a4 = (y <= (element.y + element.renderStyles.height))\n    if (a1 && a2 && a3 && a4) {\n      return true\n    }\n    return false\n  }\n\n\n  removeElement(element) {\n    events.forEach(eventName => {\n      this[`${eventName}List`] = this[`${eventName}List`].filter(item => {\n        if (item.element === element) {\n          item.remove()\n        }\n        return item.element !== element\n      })\n    })\n  }\n\n  addEventListener(type,callback,element,isCapture){\n    const tree = this[`${type}Tree`]\n    const list = this[`${type}List`]\n    if(!tree){\n      console.error('Unknown event name [' + type+']')\n    }\n    this.addCallback(callback,element,tree,list,isCapture)\n  }\n\n  /**\n   * 不在文档流中，提到relativeTo同级\n   * 根据element树的层级关系构建一个监听回调树模型，提高性能\n   * 有新的监听时，查找应该挂载在哪个节点\n   * 如果节点已经存在，复用原节点\n   * @param {Function} callback\n   * @param {Element} element\n   * @param {Callback} tree\n   * @param {Array<Callback>} list\n   * @param {Boolean} isCapture\n   */\n  addCallback(callback, element, tree, list, isCapture) {\n    let parent = null\n    let node = null\n    // 寻找应该挂载的父节点\n    let target = element\n    for (let i = list.length - 1; i >= 0; i--) {\n      // 寻找已存在节点\n      if (element === list[i].element) {\n        // 当前\n        parent = list[i - 1]\n        node = list[i]\n        break\n      }\n      // 寻找应该挂载的父节点 通过对比当前父级最近的父级\n      if (!element.isInFlow()) {\n        target = element.relativeTo.parent\n        if (!target) {\n          break\n        }\n      }\n      walkParent(target, (p, callBreak) => {\n        if (p === list[i].element) {\n          parent = list[i]\n          callBreak()\n        }\n      })\n      if (parent) {\n        break\n      }\n    }\n\n    // 如果不存在同样的元素节点\n    if (!node) {\n      node = new Callback(element, callback)\n    }\n\n    // 添加回调方法\n    if (isCapture) {\n      node.addCapture(callback)\n    } else {\n      node.addCallback(callback)\n    }\n\n    // 挂载节点\n    if (parent) {\n      // 用prepend是因为后来的层级上高于前面的，但是只有在absolute的元素才能感受到\n      parent.prependChild(node)\n    } else {\n      tree.prependChild(node)\n    }\n\n    // 缓存到list\n    list.push(node)\n  }\n\n  // 这里利用touchstart和touchend实现了移动端click事件\n  checkClick(event) {\n    if (this.touchStartEvent && this.simulateClick) {\n      // 判断两点距离\n      let { x: startx, y: starty } = this.touchStartEvent\n      let { x: endx, y: endy } = event\n      let distance = ((endy * endy + endx * endx) - (starty * starty + startx * startx))\n      if (distance < 5 && distance > -5) {\n        this.click(endx, endy)\n      }\n    }\n  }\n}\n\nclass Event {\n  constructor({ x, y, type,deltaX,deltaY }) {\n    this.x = x\n    this.y = y\n    this.relativeX = x // scroll到每一层scrollview会不断变化\n    this.relativeY = y\n    this.type = type\n    this.cancelBubble = false\n    this.currentTarget = null // 第一个element\n\n    if(type === 'mousewheel'){\n      this.deltaX = deltaX\n      this.deltaY = deltaY\n    }\n  }\n\n  // 阻止冒泡\n  stopPropagation() {\n    this.cancelBubble = true\n  }\n}\n\nclass Callback extends TreeNode {\n  constructor(element) {\n    super()\n    this.element = element\n    this.callbackList = []\n    this.captureList = []\n  }\n\n  addCallback(callback) {\n    this.callbackList.push(callback)\n  }\n\n  addCapture(callback) {\n    this.captureList.push(callback)\n  }\n\n  runCallback(params) {\n    this.callbackList.forEach(item => item.call(this.element,params))\n  }\n\n  runCapture(params) {\n    this.captureList.forEach(item => item.call(this.element,params))\n  }\n\n}\n\n\nfunction walkArray(arr, callback) {\n  let _break = false\n  const callBreak = () => _break = true\n  for (let i = 0; i < arr.length; i++) {\n    callback(arr[i], callBreak, i === arr.length - 1 ? true : false)\n    if (_break) {\n      break\n    }\n  }\n}\n","import { isExact, walk, isOuter, parseOuter, walkParent, isEndNode, isAuto, isWX, qSort3, getThrottle, floor } from './utils'\nimport TreeNode from './tree-node'\nimport STYLES from './constants'\nimport { getImage } from './weapp-adapter'\n\nconst angle = Math.PI / 2\n\n/**\n * 封装图形api\n */\nexport default class CanvasRender {\n  constructor(layer) {\n    this.layer = layer\n    this.imageBus = {}\n    this.isAnimate = false\n    this.lastPaintTime = 0\n    this.lastFrameComplete = false\n    this.throttle = getThrottle(16)\n  }\n\n  getCtx() {\n    return this.layer.ctx\n  }\n\n  getLayer() {\n    return this.layer\n  }\n\n  _restore(callback) {\n    this.getCtx().save()\n    callback()\n    this.getCtx().restore()\n  }\n\n  _path(callback) {\n    this.getCtx().beginPath()\n    callback()\n    this.getCtx().closePath()\n  }\n\n  paint(element) {\n    this.getCtx().save()\n\n    element._paint(this.lastPaintTime)\n\n    this.afterPaint(element)\n  }\n\n  afterPaint(element) {\n    // 这里通过this.ctx栈实现了overflow\n    // 第一步判断没有子元素，绘制完成即restore 有子元素需要子元素全部绘制完毕再restore\n    if (!element.hasChildren() || element.type === 'text') {\n      this.getCtx().restore()\n    }\n\n    // 如果到了层级的最后一个 释放父级的stack\n    this._helpParentRestoreCtx(element)\n  }\n\n  _helpParentRestoreCtx(element) {\n    if ((element.isVisible() && !isEndNode(element)) || (!element.isVisible() && element.next)) return\n    this.getCtx().restore()\n    let cur = element.parent\n    while (cur && !cur.next) {\n      // 如果父级也是同级最后一个，再闭合上一个\n      this.getCtx().restore()\n      cur = cur.parent\n    }\n\n\n  }\n\n  topBorder({ x, y, borderRadius, w, h }) {\n    // 左上角开始\n    this.getCtx().moveTo(x, y + borderRadius)\n    borderRadius && this.getCtx().arc(x + borderRadius, y + borderRadius, borderRadius, 2 * angle, 3 * angle)\n    this.getCtx().lineTo(x + w - borderRadius, y)\n  }\n\n  rightBorder({ x, y, borderRadius, w, h }) {\n    // 右上角\n    // this.getCtx().moveTo(x + w - borderRadius, y)\n    borderRadius && this.getCtx().arc(x + w - borderRadius, y + borderRadius, borderRadius, 3 * angle, 4 * angle)\n    this.getCtx().lineTo(x + w, y + h - borderRadius)\n  }\n\n  bottomBorder({ x, y, borderRadius, w, h }) {\n    // 右下角\n    // this.getCtx().moveTo(x + w, y + h - borderRadius)\n    borderRadius && this.getCtx().arc(x + w - borderRadius, y + h - borderRadius, borderRadius, 0, angle)\n    this.getCtx().lineTo(x + borderRadius, y + h)\n  }\n\n  leftBorder({ x, y, borderRadius, w, h }) {\n    // 左下角\n    borderRadius && this.getCtx().arc(x + borderRadius, y + h - borderRadius, borderRadius, angle, angle * 2)\n    this.getCtx().lineTo(x, y + borderRadius)\n  }\n\n  _drawBox(element) {\n    if (!(element.renderStyles.borderColor || element.renderStyles.shadowBlur)) return\n    const { contentWidth, contentHeight, paddingLeft, paddingTop, borderStyle,\n      paddingRight, paddingBottom, shadowBlur, shadowColor, backgroundColor, shadowOffsetX, shadowOffsetY,\n      borderLeftWidth, borderRightWidth, borderTopWidth, borderBottomWidth, borderWidth } = element.renderStyles\n\n    let borderRadius = getBorderRadius(element)\n\n\n    // 这里是计算画border的位置，起点位置是在线条中间，所以要考虑线条宽度\n    let x = element.contentX - element.renderStyles.paddingLeft - borderLeftWidth / 2\n    let y = element.contentY - element.renderStyles.paddingTop - borderTopWidth / 2\n    let w = contentWidth + paddingLeft + paddingRight + (borderLeftWidth + borderRightWidth) / 2\n    let h = contentHeight + paddingTop + paddingBottom + (borderTopWidth + borderBottomWidth) / 2\n\n    this.getCtx().lineCap = element.renderStyles.lineCap\n    this.getCtx().strokeStyle = element.renderStyles.borderColor\n    this.getCtx().lineJoin = 'round'\n\n    // 实现虚线\n    if (borderStyle && borderStyle !== 'solid') {\n      if (Array.isArray(borderStyle)) {\n        this.getCtx().setLineDash(borderStyle)\n      } else {\n        this.getCtx().setLineDash([5, 5])\n      }\n    }\n\n    const stroke = (borderWidth) => {\n      // 有样式则绘制出来\n      this.getCtx().lineWidth = borderWidth\n      this.getCtx().stroke()\n    }\n    this._restore(() => {\n      this._path(() => {\n\n        if (element.renderStyles.borderTopWidth) {\n          this.topBorder({ x, y, borderRadius: borderRadius ? borderRadius + (element.renderStyles.borderTopWidth / 2) : 0, w, h })\n          // 判断borderwidth 如果都是一样宽，只需要最后一次性绘制，提高性能\n          !borderWidth && stroke(element.renderStyles.borderTopWidth)\n        }\n        if (element.renderStyles.borderRightWidth) {\n          this.getCtx().moveTo(x + w - borderRadius - (borderRadius ? (element.renderStyles.borderTopWidth / 2) : 0), y)\n          this.rightBorder({ x, y, borderRadius: borderRadius ? borderRadius + element.renderStyles.borderRightWidth / 2 : 0, w, h })\n          !borderWidth && stroke(element.renderStyles.borderRightWidth)\n        }\n        if (element.renderStyles.borderBottomWidth) {\n          this.getCtx().moveTo(x + w, y + h - borderRadius - (borderRadius ? (element.renderStyles.borderRightWidth / 2) : 0))\n          this.bottomBorder({ x, y, borderRadius: borderRadius ? borderRadius + (element.renderStyles.borderBottomWidth / 2) : 0, w, h })\n          !borderWidth && stroke(element.renderStyles.borderBottomWidth)\n        }\n        if (element.renderStyles.borderLeftWidth) {\n          this.getCtx().moveTo(x + borderRadius + (borderRadius ? (element.renderStyles.borderBottomWidth / 2) : 0), y + h)\n          this.leftBorder({ x, y, borderRadius: borderRadius ? borderRadius + (element.renderStyles.borderLeftWidth / 2) : 0, w, h })\n          stroke(element.renderStyles.borderLeftWidth)\n        }\n      })\n    })\n\n  }\n\n  _drawBackground(element) {\n    const { backgroundColor, contentWidth, contentHeight, shadowColor, shadowBlur,\n      paddingLeft, paddingRight, paddingTop, paddingBottom, opacity, shadowOffsetX, shadowOffsetY,\n      borderLeftWidth, borderRightWidth, borderTopWidth, borderBottomWidth } = element.renderStyles\n    const ctx = this.getCtx()\n\n    let borderRadius = getBorderRadius(element)\n\n\n    // 这里是计算画border的位置，起点位置是在线条中间，所以要考虑线条宽度\n    let x = element.contentX - element.renderStyles.paddingLeft - borderLeftWidth\n    let y = element.contentY - element.renderStyles.paddingTop - borderTopWidth\n    let w = contentWidth + paddingLeft + paddingRight + (borderLeftWidth + borderRightWidth)\n    let h = contentHeight + paddingTop + paddingBottom + (borderTopWidth + borderBottomWidth)\n\n    if (isExact(opacity)) {\n      // 绘制透明图\n      ctx.globalAlpha = opacity\n    }\n\n    // 绘制boxshadow\n    // 需要在clip之前\n    if (shadowColor && shadowBlur) {\n      this._restore(() => {\n        this._path(() => {\n          this.topBorder({ x, y, borderRadius, w, h })\n          this.rightBorder({ x, y, borderRadius, w, h })\n          this.bottomBorder({ x, y, borderRadius, w, h })\n          this.leftBorder({ x, y, borderRadius, w, h })\n        })\n        if (isExact(shadowOffsetX)) {\n          this.getCtx().shadowOffsetX = shadowOffsetX\n        }\n        if (isExact(shadowOffsetY)) {\n          this.getCtx().shadowOffsetY = shadowOffsetY\n        }\n        this.getCtx().shadowBlur = shadowBlur\n        this.getCtx().shadowColor = shadowColor\n        this.getCtx().fillStyle = shadowColor\n        this.getCtx().fill()\n      })\n    }\n\n    this._clip(element)\n\n\n\n    // draw background\n    if (backgroundColor) {\n      this.getCtx().fillStyle = this._parseBackground(backgroundColor, element)\n      this.getCtx().fillRect(element.contentX - paddingLeft, element.contentY - paddingTop, contentWidth + paddingLeft + paddingRight, contentHeight + paddingTop + paddingBottom)\n    }\n\n    // for debug\n    if (this.getLayer().options && this.getLayer().options.debug) {\n      this.getCtx().strokeStyle = 'green'\n      this.getCtx().strokeRect(element.contentX, element.contentY, element.renderStyles.contentWidth, element.renderStyles.contentHeight)\n      // ctx.strokeStyle = '#fff'\n      // ctx.strokeText(`${parseInt(this.contentX)} ${parseInt(this.contentY)} ${contentWidth} ${contentHeight}`, this.contentX + 100, this.contentY + 10)\n\n      //\n    }\n  }\n\n  _clip(element) {\n    if (element.renderStyles.overflow !== 'hidden') return\n    const { contentWidth, contentHeight, paddingLeft, paddingTop,\n      paddingRight, paddingBottom, shadowBlur, shadowColor, backgroundColor,\n      borderLeftWidth, borderRightWidth, borderTopWidth, borderBottomWidth } = element.renderStyles\n\n    const angle = Math.PI / 2\n\n    let borderRadius = getBorderRadius(element)\n\n    // 为了把border也切进去\n    let x = element.contentX - element.renderStyles.paddingLeft - borderLeftWidth\n    let y = element.contentY - element.renderStyles.paddingTop - borderTopWidth\n    let w = contentWidth + paddingLeft + paddingRight + borderLeftWidth + borderRightWidth\n    let h = contentHeight + paddingTop + paddingBottom + borderTopWidth + borderBottomWidth\n\n    this._path(() => {\n      this.topBorder({ x, y, borderRadius, w, h })\n      this.rightBorder({ x, y, borderRadius, w, h })\n      this.bottomBorder({ x, y, borderRadius, w, h })\n      this.leftBorder({ x, y, borderRadius, w, h })\n    })\n\n\n    this.getCtx().clip()\n\n  }\n\n  _parseBackground(color, element) {\n    if (Array.isArray(color)) {\n        const gradient = this.getCtx().createLinearGradient(element.contentX, element.contentY, element.contentX+element.renderStyles.contentWidth, element.contentY+element.renderStyles.contentHeight)\n        for (let i = 0; i < color.length; i++) {\n          if (i === 0) {\n            gradient.addColorStop(0, color[0])\n          } else {\n            gradient.addColorStop(i / (color.length - 1), color[i])\n          }\n        }\n      return gradient\n    } else {\n      return color\n    }\n  }\n\n\n  _drawText(element) {\n    const { color, contentWidth, lineHeight, textAlign, textIndent, textDecoration } = element.renderStyles\n    let x = element.contentX\n    this.getCtx().fillStyle = color\n    this.getCtx().textAlign = textAlign\n    this.getCtx().font = element._getFont()\n    this.getCtx().textBaseline = 'top'\n    if (textAlign === STYLES.TEXT_ALIGN.RIGHT) {\n      x = element.contentX + contentWidth\n    } else if (textAlign === STYLES.TEXT_ALIGN.CENTER) {\n      x = element.contentX + (contentWidth / 2)\n    }\n    let _x = x\n    let _y = 0\n    element._lines.forEach((line, index) => {\n      if (index === 0 && textIndent) {\n        // 第一行实现textIndent\n        _x = x + textIndent\n      } else {\n        _x = x\n      }\n      _y = (element.contentY + (lineHeight - element._layout.fontHeight) / 2 + lineHeight * index) - 1\n      this.getCtx().fillText(line.text, _x, _y)\n      if (isWX() && element.renderStyles.fontWeight !== 400) {\n        // 小程序 字体加粗不生效\n        const offset = element.renderStyles.fontSize * 0.001\n        this.getCtx().fillText(line.text, _x - offset, _y)\n      }\n      // draw decoration\n      if (textDecoration) {\n        const decorationType = textDecoration[0]\n        _y += 1\n        this._restore(() => {\n          this._path(() => {\n            let decorationY = _y\n            if (decorationType === 'underline') {\n              decorationY = _y + lineHeight - (lineHeight - element._layout.fontHeight) / 2\n            } else if (decorationType === 'line-through') {\n              decorationY = _y + element._layout.fontHeight / 2\n            }\n            this.getCtx().moveTo(_x, decorationY)\n            this.getCtx().lineTo(_x + line.layout.width, decorationY)\n          })\n          this.getCtx().strokeStyle = color\n          this.getCtx().stroke()\n        })\n      }\n    })\n  }\n\n  /**\n   * @param {String} text\n   * @return {Object<width,height>}\n   */\n  measureText(element, text) {\n    let w = 0\n    this._restore(() => {\n      this.getCtx().font = element._getFont()\n      const { width } = this.getCtx().measureText(text)\n      w = width\n    })\n    return {\n      width: w\n    }\n  }\n\n  _drawImage(element) {\n    if (!element._image) return\n    const { contentWidth, contentHeight } = element.renderStyles\n    const { mode } = element.options.attrs\n    const { sx, sy, swidth, sheight, dx, dy, dwidth, dheight, width: imageW, height: imageH } = element._imageInfo\n    if (mode === 'aspectFill') {\n      this.getCtx().drawImage(element._image, sx, sy, swidth, sheight, element.contentX, element.contentY, contentWidth, contentHeight)\n    } else if (mode === 'aspectFit') {\n      this.getCtx().drawImage(element._image, 0, 0, imageW, imageH, dx, dy, dwidth, dheight)\n    } else {\n      this.getCtx().drawImage(element._image, element.contentX, element.contentY, contentWidth, contentHeight)\n    }\n  }\n\n  _drawScroll(element) {\n    this.getCtx().translate(element.currentScrollX, element.currentScrollY)\n  }\n\n  /**\n   * 这里应该保证onload src等接口\n   */\n  getImageInstance(src) {\n    let image = null\n\n    // 同样的路径返回缓存\n    if (this.imageBus[src]) {\n      image = this.imageBus[src]\n    } else {\n\n      if (isWX()) {\n        if (this.getCanvas()) {\n          image = this.getCanvas().createImage()\n        } else {\n          console.warn('小程序请使用设置canvas参数以创建图片')\n          image = getImage(src)\n        }\n      } else {\n        image = new Image()\n      }\n\n      if (src) {\n        this.imageBus[src] = new Promise((resolve, reject) => {\n          image.onload = (e) => {\n            resolve({\n              image: isWX() && !this.getCanvas() ? e.image : image,\n              info: {\n                width: isWX() ? image.width : e.target.width,\n                height: isWX() ? image.height : e.target.height\n              }\n            })\n          }\n        })\n      }\n\n      image.src = src\n    }\n    return this.imageBus[src]\n  }\n\n  render(node) {\n    this.lastFrameComplete = false\n    this.lastPaintTime = Date.now()\n    if (!node.parent) {\n      // root\n      this.getCtx().clearRect(0, 0, this.getLayer().options.width, this.getLayer().options.height)\n    } else {\n      this.getCtx().clearRect(node.x, node.y, node.renderStyles.width, node.renderStyles.height)\n    }\n    let element = null\n    walk(node, (renderNode, callContinue, callNext) => {\n      if (renderNode.isVisible()) {\n        // 可见的才渲染\n        this.paint(renderNode)\n      } else {\n        // 跳过整个子节点\n        callNext()\n        this._helpParentRestoreCtx(renderNode)\n      }\n    })\n    if (isWX()) {\n      // 兼容小程序\n      this.getCtx().draw && this.getCtx().draw()\n    }\n\n    this.lastFrameComplete = true\n\n  }\n\n  renderFPS() {\n\n  }\n\n  readyToRender(element) {\n\n    // this.element = generateRenderTree(element)\n    this.element = element\n\n    const options = this.getLayer().options\n\n    this.lastPaintTime = Date.now()\n\n    if (options && options.animate) {\n      this.animate()\n    } else {\n      this.render(this.element)\n    }\n\n  }\n\n  requestRepaint(element) {\n    if (this.isAnimate) return\n    // 如果已经有frame在排队等待了 忽略\n    // if(!this.lastFrameComplete) return\n    // let nextFrameTime = Date.now() - this.lastPaintTime\n    // if(nextFrameTime < 16){\n    //   setTimeout(() => this.render(this.element),nextFrameTime)\n    // }else{\n    this.render(this.element)\n    // }\n\n  }\n\n  // could be null\n  getCanvas() {\n    const options = this.getLayer().options\n    return options && options.canvas || null\n  }\n\n  _animate(preTime) {\n    const now = Date.now()\n    this.render(this.element)\n    if (!this.isAnimate) return\n    window.requestAnimationFrame(() => this._animate(now))\n  }\n\n  /**\n   * 不建议使用了\n   */\n  animate() {\n    this.isAnimate = true\n    window.requestAnimationFrame(() => this._animate())\n  }\n\n  stopAnimate() {\n    this.isAnimate = false\n  }\n\n  // 所有副作用完成\n  // 图片加载异步请求\n  onEffectFinished() {\n    const list = Object.keys(this.imageBus).map(key => {\n      return this.imageBus[key]\n    })\n    return Promise.all(list)\n  }\n\n\n\n}\n\nfunction getBorderRadius(element) {\n  const { paddingWidth, paddingHeight } = element.renderStyles\n  let { borderRadius } = element.renderStyles\n  if (borderRadius * 2 > paddingWidth) {\n    // 如果大于一半，则角不是90度，统一限制最大为一半\n    borderRadius = paddingWidth / 2\n  }\n  if (borderRadius * 2 > paddingHeight) {\n    borderRadius = paddingHeight / 2\n  }\n  if (borderRadius < 0) borderRadius = 0\n  return floor(borderRadius)\n}\n\n// function generateRenderTree(element){\n//   const _root = new RenderNode(element)\n//   let preZ = 0\n//   let pivotZ = 0\n//   let cur = null\n//   let stack = [_root]\n//   while(stack.length){\n//     cur = stack.pop()\n//     if(cur.element.hasChildren()){\n//       cur.children = cur.element._getChildren().map(item => new RenderNode(item))\n//       // sort by zIndex\n//       cur.children = qSort3(cur.children,(pre,pivot) => {\n//         preZ = pre.element.renderStyles.zIndex || 0\n//         pivotZ = pivot.element.renderStyles.zIndex || 0\n//         return preZ - pivotZ\n//       })\n//       Array.prototype.push.apply(stack,cur.children)\n//     }\n//   }\n//   TreeNode.connectChildren(_root)\n//   return _root\n// }\n\n// class RenderNode extends TreeNode {\n//   constructor(element){\n//     super()\n//     this.element = element\n//   }\n// }\n","import { isWX } from \"./utils\"\n\n// 只支持小程序最新的支持同层渲染的canvas api,\n// 不用了\nexport function getImage(url) {\n  const instance = {onload: () => {}}\n  new Promise((resolve, reject) => {\n    wx.downloadFile({\n      url:url,\n      success(res) {\n        wx.getImageInfo({\n          src: res.tempFilePath,\n          success(res1) {\n            resolve({\n              target: {\n                width: res1.width,\n                height: res1.height\n              },\n              image: res.tempFilePath\n            })\n          }\n        })\n      },\n      fail(err) {\n        reject(err)\n      }\n    })\n  })\n  .then((res) => {\n    instance.onload(res)\n  })\n  .catch(err => {\n\n  })\n  return instance\n}\n\n","import EventManager from './event-manager'\nimport { walk, breadthFirstSearch, breadthFirstSearchRight, walkParent, isWX } from './utils'\nimport TreeNode from './tree-node'\nimport CanvasRender from './canvas-render'\nexport default class Layer {\n  constructor(ctx, options) {\n    this.ctx = ctx\n    this.node = null\n    this.isAnimate = false\n    this.nodeList = []\n    this.p2cList = []\n    this.c2pList = []\n    this.renderList = []\n    this.options = options\n    this.eventManager = new EventManager(options)\n    this.render = new CanvasRender(this)\n  }\n\n  update(ctx, options) {\n    this.ctx = ctx\n    this.options = options\n    this.options.renderStyles = options\n    this.node.container = this.options\n  }\n\n  mountNode(node) {\n    this.node = node\n    this.node.root = this.node\n    this.node.layer = this\n    this.node.container = this.options\n    // 事件也清空一下，重新挂载\n    this.eventManager.clear()\n    this.initRender()\n  }\n\n  initRender() {\n    // for 打印耗时\n    const startTime = Date.now()\n\n    TreeNode.connectChildren(this.node)\n    this.initP2CList()\n    this.initC2PList()\n\n    this.flow()\n\n    // flow 完成后监听effect完成\n    this.render.onEffectFinished()\n      .then((res) => this.lifecycle('onEffectSuccess', res))\n      .catch((res) => this.lifecycle('onEffectFail', res))\n    // .finally((res) => this.lifecycle('onEffectFinished', res))\n\n    this.repaint()\n\n    console.log(`渲染${this.p2cList.length}个元素 耗时 ${(Date.now() - startTime)} ms`)\n  }\n\n  initP2CList() {\n    // 广度优先\n    this.p2cList = breadthFirstSearch(this.node)\n  }\n\n  initC2PList() {\n    this.c2pList = breadthFirstSearchRight(this.node)\n  }\n\n\n  flow(node = this.node) {\n    for (let i = 0; i < this.p2cList.length; i++) {\n      this.p2cList[i].init()\n    }\n\n    this.reflow()\n  }\n\n  initPaintList() {\n    // 这里实现index\n    this.renderList = this.nodeList\n  }\n\n  reflow(node = this.node) {\n\n    for (let i = 0; i < this.c2pList.length; i++) {\n      this.c2pList[i]._initWidthHeight()\n    }\n\n    for (let i = 0; i < this.p2cList.length; i++) {\n      this.p2cList[i]._initPosition()\n    }\n  }\n\n  reflowElement(element) {\n    // 如果有line，则需要重第一个开始\n    let target = element\n    while (target && target.line) {\n      target = target.parent\n    }\n    const p2cList = breadthFirstSearch(target)\n    for (let i = 0; i < p2cList.length; i++) {\n      p2cList[i]._initStyles()\n    }\n\n    // 所有子元素\n    const children = breadthFirstSearchRight(target)\n    for (let i = 0; i < children.length; i++) {\n      children[i]._initWidthHeight()\n    }\n\n    if (!element.isInFlow()) {\n      for (let i = 0; i < p2cList.length; i++) {\n        p2cList[i]._initPosition()\n      }\n      this.repaint()\n    } else {\n      this.onElementChange(target)\n    }\n\n\n  }\n\n  onElementRemove(element) {\n    this.eventManager.removeElement(element)\n    this.initC2PList()\n    this.initP2CList()\n    this.reflowElement(element)\n  }\n\n  onElementAdd(element) {\n    TreeNode.connectChildren(element)\n    this.initC2PList()\n    this.initP2CList()\n    breadthFirstSearch(element).forEach(item => item.init())\n    this.reflowElement(element)\n  }\n\n  // 元素变化后调用，尽可能少重排重绘\n  onElementChange(element) {\n\n    walkParent(element, (parent, callbreak) => {\n      parent._initWidthHeight()\n      if (parent.type === 'scroll-view') callbreak()\n    })\n\n    for (let i = 0; i < this.p2cList.length; i++) {\n      this.p2cList[i]._initPosition()\n    }\n    this.repaint()\n  }\n\n  callBeforePaint() {\n    for (let i = 0; i < this.p2cList.length; i++) {\n      this.p2cList[i].beforePaint && this.p2cList[i].beforePaint()\n    }\n  }\n\n  /**\n   * 可以给定element，则只会重绘element所在的区域\n   * @param {Element} element\n   */\n  repaint(element = this.node) {\n    if (isWX()) {\n      // 微信环境下始终重绘整个树\n      element = this.node\n    }\n    if (!element.isInFlow()) element = this.node\n\n    this.callBeforePaint()\n\n    this.render.readyToRender(this.node)\n  }\n\n  animate() {\n    console.warn('use [animate] option instead!')\n  }\n\n  getElementBy() {\n    return this.node.getElementBy(...arguments)\n  }\n\n  lifecycle(name, arg) {\n    if (this.options.lifecycle) {\n      this.options.lifecycle[name] && this.options.lifecycle[name](arg)\n    }\n  }\n\n}\n\n\n","import View from './view'\nimport { easeInOutElastic, isExact, isAuto, floor } from './utils'\nimport STYLES from './constants'\n\nexport default class ScrollView extends View {\n\n  constructor(options, children) {\n    const { styles, ...rest } = options\n    super(rest, children)\n    this.options.styles = {\n      direction: styles.direction || 'y'\n    }\n    // 外面包裹一层容器，内层的滚动\n    options.styles.overflow = 'hidden'\n    this.type = 'scroll-view'\n    this._scrollView = new View(options, [this])\n    this._scrollView.type = 'scroll-view-container'\n    this.visibleIndex = null\n    this.renderOnDemand = options.attrs && options.attrs.renderOnDemand || false\n    return this._scrollView\n  }\n\n  _getDefaultStyles() {\n    return {\n      ...STYLES.DEFAULT_STYLES,\n      direction: 'y',\n    }\n  }\n\n  beforePaint() {\n    this.initChildrenVisible()\n  }\n\n  _initWidthHeight() {\n    super._initWidthHeight()\n    // 这里需要父级款高度，但是外层必须是exact\n    this.initScroll()\n  }\n\n  _paint() {\n    this.getRender()._drawBackground(this)\n    this.getRender()._drawScroll(this)\n    this.getRender()._drawBox(this)\n  }\n\n  init() {\n    super.init()\n    this.addEventListener()\n    const { height, width } = this._scrollView.styles\n    const { direction } = this.styles\n    if (direction.match('y')) {\n      if (isAuto(height)) {\n        // 必须设置\n        console.error('scroll-view 必须设置明确的高度')\n      } else {\n        this.styles.height = 'auto'\n        this.renderStyles.height = 'auto'\n      }\n    }\n    if (direction.match('x')) {\n      if (isAuto(width)) {\n        // 必须设置\n        console.error('scroll-view 必须设置明确的宽度')\n      } else {\n        this.styles.width = 'auto'\n        this.renderStyles.width = 'auto'\n      }\n    }\n  }\n\n  addEventListener() {\n    // 监听滚动\n    this.currentScrollX = 0\n    this.currentScrollY = 0\n    let direction = this.styles.direction\n    let startX = 0\n    let startY = 0\n    let lastStartX = 0\n    let lastStartY = 0\n    let startMove = false\n    let offsetX = 0\n    let offsetY = 0\n    let speedX = 0\n    let speedY = 0\n    let glideInterval = null\n    let resistanceX = 1\n    let resistanceY = 1\n\n    this.getLayer().eventManager.EVENTS.forEach(eventName => {\n      this.getLayer().eventManager.addEventListener(eventName, (e) => {\n        if (direction.match('y')) {\n          e.relativeY -= this.currentScrollY\n        }\n        if (direction.match('x')) {\n          e.relativeX -= this.currentScrollX\n        }\n      }, this._scrollView, true)\n    })\n\n    this.getLayer().eventManager.addEventListener('mousewheel', (e) => {\n      if (!this.scrollBy(e.deltaX, e.deltaY)) {\n        this.scrollTo({ x: e.deltaX <= 0 ? this.maxScrollX : 0, y: e.deltaY <= 0 ? this.maxScrollY : 0 })\n      } else {\n        e.stopPropagation()\n      }\n    }, this._scrollView)\n\n    this.getLayer().eventManager.addEventListener('touchstart', (e) => {\n      e.stopPropagation()\n      startX = e.x\n      startY = e.y\n      lastStartX = startX\n      lastStartY = startY\n      startMove = true\n      clearInterval(glideInterval)\n    }, this._scrollView)\n    this.getLayer().eventManager.addEventListener('touchmove', (e) => {\n      if (startMove) {\n        e.stopPropagation()\n        offsetX = (e.x - startX)\n        offsetY = (e.y - startY)\n        if (this.scrollBy(offsetX, offsetY)) {\n          lastStartX = startX\n          lastStartY = startY\n          startX = e.x\n          startY = e.y\n        }\n      }\n    }, this._scrollView)\n    this.getLayer().eventManager.addEventListener('touchend', (e) => {\n      if (startMove) {\n        startMove = false\n\n        speedX = (e.x - lastStartX)\n        speedY = (e.y - lastStartY)\n        resistanceX = -speedX * 0.02\n        resistanceY = -speedY * 0.02\n        clearInterval(glideInterval)\n        glideInterval = setInterval(() => {\n          if (!this.scrollBy(speedX, speedY)) {\n            this.scrollTo(this.currentScrollX + speedX, this.currentScrollY + speedY)\n            clearInterval(glideInterval)\n          }\n          speedX += resistanceX\n          speedY += resistanceY\n          if (speedX * speedX <= 0.05 && speedY * speedY <= 0.05) {\n            speedX = 0\n            speedY = 0\n            clearInterval(glideInterval)\n          }\n        }, 16)\n      }\n    }, this._scrollView)\n  }\n\n  initScroll() {\n    const { contentWidth: offsetWidth, contentHeight: offsetHeight } = this._scrollView.renderStyles\n    const { width: scrollWidth, height: scrollHeight, direction } = this.renderStyles\n    this.maxScrollX = scrollWidth - offsetWidth\n    this.maxScrollY = scrollHeight - offsetHeight\n  }\n\n  calcScrollBoundX(offsetX) {\n    if ((- this.currentScrollX - offsetX) > this.maxScrollX) {\n      return false\n    } else if (this.currentScrollX + offsetX > 0) {\n      return false\n    }\n\n    return true\n  }\n\n  calcScrollBoundY(offsetY) {\n    if ((- this.currentScrollY - offsetY) > this.maxScrollY) {\n      return false\n    } else if (this.currentScrollY + offsetY > 0) {\n      return false\n    }\n\n    return true\n  }\n\n  scrollByX(offsetX) {\n    if (!this.renderStyles.direction.match('x')) return false\n    if (this.calcScrollBoundX(offsetX)) {\n      this.currentScrollX += offsetX\n      return true\n    } else {\n      return false\n    }\n  }\n\n  scrollByY(offsetY) {\n    if (!this.renderStyles.direction.match('y')) return false\n    if (this.calcScrollBoundY(offsetY)) {\n      this.currentScrollY += floor(offsetY)\n      this.calcChildrenVisible()\n      // this.getLayer().repaint(this._scrollView)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  scrollBy(offsetX, offsetY) {\n    // 这里要两个都运行，所以不要用短路\n    if (this.scrollByX(offsetX) | this.scrollByY(offsetY)) {\n      this.getRender().requestRepaint(this._scrollView)\n      return true\n    }\n    return false\n  }\n\n  scrollTo({ x, y }) {\n    if (isExact(x) && this.maxScrollX > 0) {\n      x = x\n      if (x > this.maxScrollX) x = this.maxScrollX\n      this.currentScrollX = -floor(x)\n    }\n    if (isExact(y) && this.maxScrollY > 0) {\n      y = y\n      if (y > this.maxScrollY) y = this.maxScrollY\n      this.currentScrollY = -floor(y)\n    }\n    this.initChildrenVisible()\n    this.getRender().requestRepaint(this._scrollView)\n  }\n\n  // TODO:\n  initChildrenVisible() {\n    if (!this.renderOnDemand) return\n\n    // console.log('==============')\n    const children = this._getChildrenInFlow()\n    // 左\n    for (let i = 0; i < children.length; i++) {\n      if (this.isElementInViewport(children[i])) {\n        this.visibleIndex = [i, -1]\n        break\n      } else {\n        children[i].visible = false\n      }\n    }\n\n    // 右\n    for (let i = children.length - 1; i >= 0; i--) {\n      if (this.isElementInViewport(children[i])) {\n        this.visibleIndex[1] = i\n        break\n      } else {\n        children[i].visible = false\n      }\n    }\n\n    // 中间\n    for (let i = this.visibleIndex[0]; i <= this.visibleIndex[1]; i++) {\n      children[i].visible = true\n    }\n  }\n\n  // 只用计算两头\n  // 数据量时能显著提高效率\n  // 滚动太快会有问题，暂时使用上面的init\n  calcChildrenVisible() {\n    if (!this.renderOnDemand) return\n    const children = this._getChildrenInFlow()\n    const head = generateSiblingNodeIndex(this.visibleIndex[0], 5)\n    const foot = generateSiblingNodeIndex(this.visibleIndex[1], 5)\n    let visibleIndex = []\n    for (let i = head[0]; i <= head[head.length - 1]; i++) {\n      if (children[i]) {\n        if (this.isElementInViewport(children[i])) {\n          children[i].visible = true\n          if (!visibleIndex.length) {\n            visibleIndex.push(i)\n          }\n        } else {\n          children[i].visible = false\n        }\n      }\n    }\n    for (let i = foot[foot.length - 1]; i >= foot[0]; i--) {\n      if (children[i]) {\n        if (this.isElementInViewport(children[i])) {\n          children[i].visible = true\n          if (visibleIndex.length === 1) {\n            visibleIndex.push(i)\n          }\n        } else {\n          children[i].visible = false\n        }\n      }\n    }\n    this.visibleIndex = visibleIndex\n    if (this.visibleIndex.length < 2) {\n      this.initChildrenVisible()\n    }\n  }\n\n  isElementInViewport(element) {\n    if (this.styles.direction.match('y')) {\n      return ((element.y + element.renderStyles.height + this.currentScrollY) > this._scrollView.contentY)\n        && ((element.y + this.currentScrollY) < this._scrollView.contentY + this._scrollView.renderStyles.contentHeight)\n    } else {\n      return true\n      // return ((element.x + element.renderStyles.width + this.currentScroll) > this._scrollView.contentX)\n      // && ((element.x + this.currentScroll) < this._scrollView.contentX + this._scrollView.renderStyles.contentWidth)\n    }\n  }\n\n}\n\n\nfunction generateSiblingNodeIndex(index, offset) {\n  let start = index - offset\n  let end = index + offset\n  let list = []\n  for (let i = start; i <= end; i++) {\n    list.push(i)\n  }\n  return list\n}\n","import View from './view'\nimport Text from './text'\nimport Image from './image'\nimport Layer from './layer'\nimport ScrollView from './scroll-view'\n\n/**\n * 生成一个element tree\n * @param {String} name\n * @param {Function} options\n */\n\nconst elementFactory = {}\n//\nregisterComponent('view', (options, children) => new View(options, children))\nregisterComponent('text', (options, children) => new Text(options, children))\nregisterComponent('image', (options, children) => new Image(options, children))\nregisterComponent('scroll-view', (options, children) => new ScrollView(options, children))\nregisterComponent('scrollview', (options, children) => new ScrollView(options, children))\n\nexport function createElement(model) {\n  // 生成树\n  function c(name, options = {}, children = []) {\n    // if (arguments.length < 3) {\n    //   throw Error(`Element [${name}]: need 3 argument but get 2`)\n    // }\n    let _element = null\n    let _children = children\n    if (elementFactory[name]) {\n      if (typeof children === 'string' && name !== 'text') {\n        // 支持text简写\n        _children = [new Text({}, children)]\n      } else if (!Array.isArray(children) && name !== 'text') {\n        throw Error(`Element [${name}]:Children must be type of Array!`)\n      }\n      _element = elementFactory[name](options, _children, c)\n    } else {\n      throw Error(`Unknown tag name [${name}] !`)\n    }\n    return _element\n  }\n  const _model = model(c)\n  // 挂载children\n  return _model\n}\n\nexport function createLayer(ctx, options) {\n  return new Layer(ctx, options)\n}\n\n// 注册全局组件\nexport function registerComponent(name, factory) {\n  if (elementFactory[name]) {\n    throw Error(`Already exist tag name [${name}] !`)\n  }\n  elementFactory[name] = factory\n}\n\n\n\n\n\n","\nimport { createElement, createLayer, registerComponent } from './create-element'\nimport px from './px'\nimport './weapp-adapter'\nimport View from './view'\nimport Text from './text'\nimport Image from './image'\nimport Layer from './layer'\nimport ScrollView from './scroll-view'\nimport { mergeOptions } from './utils'\n\n\nconst ef = {\n  createLayer,\n  createElement,\n  component: registerComponent,\n  View,\n  Text,\n  Image,\n  Layer,\n  ScrollView,\n  mergeOptions\n}\n\n\n\nexport default ef\n\n"],"names":["DISPLAY","BLOCK","INLINE_BLOCK","INLINE","FLEX","NONE","WIDTH","AUTO","OUTER","FLEX_DIRECTION","ROW","COLUMN","POSITION","ABSOLUTE","FIXED","RELATIVE","STATIC","DEFAULT_STYLES","display","fontSize","fontWeight","fontFamily","color","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginBottom","marginLeft","marginRight","height","borderRadius","lineCap","flexDirection","verticalAlign","textAlign","justifyContent","alignItems","whiteSpace","zIndex","visible","position","TEXT_ALIGN","LEFT","RIGHT","CENTER","isExact","num","isAuto","isOuter","match","parseOuter","_n","parseInt","replace","isNaN","walk","element","callback","_continue","_next","_callContinue","_callNext","stack","push","length","item","pop","children","_getChildren","i","walkParent","cur","stop","callbreak","parent","isWX","Boolean","wx","getSystemInfoSync","err","breadthFirstSearch","node","nodes","queue","unshift","shift","_generateRender","breadthFirstSearchRight","reverse","mergeKeys","floor","val","Line","[object Object]","this","width","contentWidth","y","doorClosed","outerWidth","container","elements","start","end","offsetX","id","Math","random","el","initHeight","styles","Infinity","renderStyles","add","lineHeight","right","_getContainerLayout","contentX","x","getPreLine","initLayout","getOffsetY","line","refreshWidthHeight","next","closeLine","refreshXAlign","pre","_getPreLayout","contentY","KEY","STYLES","contentHeight","FlexBox","super","exactValue","flexTotal","key","calcFlex","flex","containerWidth","forEach","child","_refreshContentWithLayout","alignSelf","TreeNode","hasChildren","filter","map","index","_setParent","_setSibling","connectChildren","root","Array","isArray","treeNode","Error","indexOf","splice","removeChild","_completeFlex","isInFlow","_completeWidth","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","overflow","_completeBorder","_completeFont","padding","margin","_completePaddingMargin","Element","options","Object","assign","attrs","on","render","_initStyles","initEvent","keys","eventName","getLayer","eventManager","EVENTS","includes","addEventListener","removeElement","layer","mountNode","_getDefaultStyles","_getParentStyles","_completeStyles","_initRenderStyles","parentWidth","parentHeight","paddingWidth","paddingHeight","_getTotalBorderWidth","_getTotalBorderHeight","_InFlexBox","_bindFlexBox","relativeTo","findRelativeTo","curStyles","extendStyles","completeStyles","ctx","layout","_measureLayout","_refreshLayoutWithContent","_bindLine","refreshElementPosition","top","bottom","left","canIEnter","bind","_getChildrenInFlow","value","appendChild","onElementAdd","prependChild","onElementRemove","append","prepend","_needReflow","reflowElement","getRender","requestRepaint","View","type","_drawBackground","_drawBox","Text","_layout","_lines","_drawText","measureText","fontHeight","_calcLine","textWidth","textHeight","parentContentWidth","text","lineIndex","lineText","lastLayout","maxLine","substring","undefined","$Image","_imageInfo","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","debugColor","_image","init","_loadImage","_drawImage","mode","Promise","resolve","reject","getImageInstance","src","then","info","image","_layoutImage","isVisible","load","catch","error","imageW","imageH","w","h","getHeightByWidth","getWidthByHeight","originWidth","originHeight","events","EventManager","simulateClick","clear","touchStartEvent","event","Event","_emit","checkClick","deltaX","deltaY","e","tree","callbackList","curArr","walkArray","callBreak","isEnd","isPointInElement","relativeX","relativeY","runCapture","currentTarget","runCallback","cancelBubble","a1","a2","a3","a4","remove","isCapture","list","console","addCallback","target","p","Callback","addCapture","startx","starty","endx","endy","distance","click","captureList","params","call","arr","_break","angle","PI","CanvasRender","imageBus","isAnimate","lastPaintTime","lastFrameComplete","throttle","threshold","timer","fn","setTimeout","getThrottle","getCtx","save","restore","beginPath","closePath","_paint","afterPaint","_helpParentRestoreCtx","moveTo","arc","lineTo","borderColor","shadowBlur","borderStyle","shadowColor","backgroundColor","shadowOffsetX","shadowOffsetY","getBorderRadius","strokeStyle","lineJoin","setLineDash","stroke","lineWidth","_restore","_path","topBorder","rightBorder","bottomBorder","leftBorder","opacity","globalAlpha","fillStyle","fill","_clip","_parseBackground","fillRect","debug","strokeRect","clip","gradient","createLinearGradient","addColorStop","textIndent","textDecoration","font","_getFont","textBaseline","_x","_y","fillText","offset","decorationType","decorationY","drawImage","translate","currentScrollX","currentScrollY","getCanvas","createImage","warn","url","instance","onload","downloadFile","res","getImageInfo","tempFilePath","res1","getImage","Image","Date","now","clearRect","renderNode","callContinue","callNext","paint","draw","animate","canvas","preTime","window","requestAnimationFrame","_animate","all","Layer","nodeList","p2cList","c2pList","renderList","initRender","startTime","initP2CList","initC2PList","flow","onEffectFinished","lifecycle","repaint","log","reflow","_initWidthHeight","_initPosition","onElementChange","beforePaint","callBeforePaint","readyToRender","getElementBy","arguments","name","arg","ScrollView","rest","direction","_scrollView","visibleIndex","renderOnDemand","initChildrenVisible","initScroll","_drawScroll","startX","startY","lastStartX","lastStartY","startMove","offsetY","speedX","speedY","glideInterval","resistanceX","resistanceY","scrollBy","stopPropagation","scrollTo","maxScrollX","maxScrollY","clearInterval","setInterval","offsetWidth","offsetHeight","scrollWidth","scrollHeight","calcScrollBoundX","calcScrollBoundY","calcChildrenVisible","scrollByX","scrollByY","isElementInViewport","head","generateSiblingNodeIndex","foot","elementFactory","registerComponent","factory","createLayer","createElement","model","c","_element","_children","component","mergeOptions","mergedOptions"],"mappings":"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"}